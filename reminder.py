# TODO: –í–æ–∑–º–æ–∂–Ω–æ —Å—Ç–æ–∏—Ç –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ–ø–æ–≤–µ—â–µ–Ω–∏—è —Å—Ç–∞—Ä—à–µ–≥–æ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from loguru import logger
from aiogram import Router

from bot_init import bot
from time_control import get_current_waiting_time_string
from tomato.core.settings import SETTINGS
from tomato.core.api.auth import get_tomato_auth_token

reminder_router = Router(name=__name__)

def get_keyboard():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–∞"""
    inline_kb_list = [
        [InlineKeyboardButton(text="–î–ê", callback_data='reminder_yes')],
        [InlineKeyboardButton(text="–ù–ï–¢", callback_data='reminder_no')]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)


async def reminder():

    try:
        token = get_tomato_auth_token()
    except Exception as e:
        await bot.send_message(
            SETTINGS.MAIN_CHAT_ID,
            f"[Reminder]–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {e}"
        )
        logger.exception(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {e}")
        return

    for thread_id in SETTINGS.THREAD_ID_LIST:
        organization_id = SETTINGS.get_organization_id(thread_id)

        if organization_id is None:
            continue

        try:
            time_string = get_current_waiting_time_string(organization_id, token)
        except Exception as e:
            await bot.send_message(
                SETTINGS.MAIN_CHAT_ID,
                f"[Reminder]–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è: {e}"
            )
            logger.exception(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è: {e}")
            continue

        await bot.send_message(
            SETTINGS.MAIN_CHAT_ID,
            "–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è:",
            message_thread_id=thread_id
        )
        await bot.send_message(
            SETTINGS.MAIN_CHAT_ID,
            time_string,
            message_thread_id=thread_id
        )

        await bot.send_message(
            SETTINGS.MAIN_CHAT_ID,
            "–í–µ—Ä–Ω–æ –ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è?",
            reply_markup=get_keyboard()
        )

@reminder_router.callback_query()
async def reminder_callback(call: CallbackQuery):
    if call.data == 'reminder_yes':
        await bot.answer_callback_query("üî•")
    elif call.data == 'reminder_no':
        await bot.send_message(
            SETTINGS.MAIN_CHAT_ID,
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è.",
            message_thread_id=call.message.message_thread_id
        )
